[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 2.5
i2c_mcu: ebb36
i2c_bus: i2c3_PB3_PB4
x_offset: -48
y_offset: -10
samples: 5
samples_result: average
samples_tolerance: 0.03
samples_tolerance_retries: 5

[safe_z_home]
home_xy_position: 161, 128
speed: 100
z_hop: 10
z_hop_speed: 10

[bed_mesh]
speed: 150
horizontal_move_z: 2
mesh_min: 15, 15
mesh_max: 210, 200
probe_count: 20, 20
algorithm: bicubic
bicubic_tension: 0.2
adaptive_margin: 5
scan_overshoot: 8

[screws_tilt_adjust]
screw2: 71, 46
screw2_name: front left screw
screw3: 241, 46
screw3_name: front right screw
screw4: 241, 214
screw4_name: rear right screw 
screw1: 71, 214
screw1_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

[z_tilt]
# Ender screw edge offsets are 35,35
# z_positions = IRL position of the stepper itself, in nozzle coords so will be off the bed at the back
# points = probe locations = nozzle + probe offset
# stepper X are 30mm off bed edge left & right
# stepper Y is 80 off the back when nozzle at Y=230 = 230+80
z_positions:
	-20, 170     ##Stepper Location Z0, as if the nozzle were in the screw
	270, 170       ##Stepper Location Z1, as if the nozzle were in the screw
points:
    57, 117
    254, 117
speed: 200
horizontal_move_z: 8
retries: 20
retry_tolerance: 0.01

[force_move]
enable_force_move: true

[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
  SET_GCODE_OFFSET_ORIG { rawparams }

[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
gcode:
  BTT_BED_MESH_CALIBRATE METHOD=rapid_scan

[gcode_macro SET_Z_FROM_PROBE]
gcode:
  {% set cf = printer.configfile.settings %}
  SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}
  G90
  G1 Z{cf.safe_z_home.z_hop}

